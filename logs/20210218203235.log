2021-02-18 20:32:36,282 Authorizationhandler.py[line:47]INFO - {'success': True, 'data': {'bindMobile': True, 'multiAuth': False, 'mobileNumber': None, 'notifyNumber': '18500789646', 'secondaryType': None, 'bindMobileUrl': None, 'casLoginUrl': 'http://geip-fat.glodon.com/cas/login?type=SSO_TICKET&ticket=ac8fbbdc-e9ee-4657-953a-6982398f2e5f&service=http%3A%2F%2Fgeip-fat.glodon.com%2Fapi%2Fclient%2Fcas%2Fidentification%2Fauthenticate%3Ftype%3Dcas'}, 'errorMsg': None, 'message': None, 'errorCode': 0}
2021-02-18 20:32:36,282 Authorizationhandler.py[line:47]INFO - {'success': True, 'data': {'bindMobile': True, 'multiAuth': False, 'mobileNumber': None, 'notifyNumber': '18500789646', 'secondaryType': None, 'bindMobileUrl': None, 'casLoginUrl': 'http://geip-fat.glodon.com/cas/login?type=SSO_TICKET&ticket=ac8fbbdc-e9ee-4657-953a-6982398f2e5f&service=http%3A%2F%2Fgeip-fat.glodon.com%2Fapi%2Fclient%2Fcas%2Fidentification%2Fauthenticate%3Ftype%3Dcas'}, 'errorMsg': None, 'message': None, 'errorCode': 0}
2021-02-18 20:32:39,057 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称为空】
2021-02-18 20:32:39,057 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称为空】
2021-02-18 20:32:39,057 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60008}
2021-02-18 20:32:39,057 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60008}
2021-02-18 20:32:39,057 workbenchAdd.py[line:44]INFO - 检查返回信息为：{"message":"部件名称不能为空"}
2021-02-18 20:32:39,057 workbenchAdd.py[line:44]INFO - 检查返回信息为：{"message":"部件名称不能为空"}
2021-02-18 20:32:39,273 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60008, 'message': '部件名称不能为空'}
2021-02-18 20:32:39,273 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60008, 'message': '部件名称不能为空'}
2021-02-18 20:32:39,276 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件编码为空】
2021-02-18 20:32:39,276 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件编码为空】
2021-02-18 20:32:39,277 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60010}
2021-02-18 20:32:39,277 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60010}
2021-02-18 20:32:39,277 workbenchAdd.py[line:44]INFO - 检查返回信息为：{"message":"部件编码不能为空"}
2021-02-18 20:32:39,277 workbenchAdd.py[line:44]INFO - 检查返回信息为：{"message":"部件编码不能为空"}
2021-02-18 20:32:39,473 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60010, 'message': '部件编码不能为空'}
2021-02-18 20:32:39,473 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60010, 'message': '部件编码不能为空'}
2021-02-18 20:32:39,474 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件内容为空】
2021-02-18 20:32:39,474 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件内容为空】
2021-02-18 20:32:39,474 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60009}
2021-02-18 20:32:39,474 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60009}
2021-02-18 20:32:39,474 workbenchAdd.py[line:44]INFO - 检查返回信息为：{"message":"内容url不能为空"}
2021-02-18 20:32:39,474 workbenchAdd.py[line:44]INFO - 检查返回信息为：{"message":"内容url不能为空"}
2021-02-18 20:32:39,660 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60009, 'message': '内容url不能为空'}
2021-02-18 20:32:39,660 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60009, 'message': '内容url不能为空'}
2021-02-18 20:32:39,662 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件组件类型为空】
2021-02-18 20:32:39,662 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件组件类型为空】
2021-02-18 20:32:39,662 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60013}
2021-02-18 20:32:39,662 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60013}
2021-02-18 20:32:39,663 workbenchAdd.py[line:44]INFO - 检查返回信息为：{"message":"部件规格分类不能为空"}
2021-02-18 20:32:39,663 workbenchAdd.py[line:44]INFO - 检查返回信息为：{"message":"部件规格分类不能为空"}
2021-02-18 20:32:39,832 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60013, 'message': '部件规格分类不能为空'}
2021-02-18 20:32:39,832 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60013, 'message': '部件规格分类不能为空'}
2021-02-18 20:32:39,834 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-新增成功】
2021-02-18 20:32:39,834 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-新增成功】
2021-02-18 20:32:39,834 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":200}
2021-02-18 20:32:39,834 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":200}
2021-02-18 20:32:39,834 workbenchAdd.py[line:44]INFO - 检查返回信息为：
2021-02-18 20:32:39,834 workbenchAdd.py[line:44]INFO - 检查返回信息为：
2021-02-18 20:32:40,040 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60017, 'message': '相同名称的部件在当前产品中已存在'}
2021-02-18 20:32:40,040 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60017, 'message': '相同名称的部件在当前产品中已存在'}
2021-02-18 20:32:40,042 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称重复】
2021-02-18 20:32:40,042 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称重复】
2021-02-18 20:32:40,043 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60017,}
2021-02-18 20:32:40,043 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60017,}
2021-02-18 20:32:40,043 workbenchAdd.py[line:44]INFO - 检查返回信息为：{"message":"相同名称的部件在当前产品中已存在"}
2021-02-18 20:32:40,043 workbenchAdd.py[line:44]INFO - 检查返回信息为：{"message":"相同名称的部件在当前产品中已存在"}
2021-02-18 20:32:40,261 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60016, 'message': '部件名称格式不正确'}
2021-02-18 20:32:40,261 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60016, 'message': '部件名称格式不正确'}
2021-02-18 20:32:40,263 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称重复】
2021-02-18 20:32:40,263 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称重复】
2021-02-18 20:32:40,263 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60018}
2021-02-18 20:32:40,263 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60018}
2021-02-18 20:32:40,263 workbenchAdd.py[line:44]INFO - 检查返回信息为：{"message":"相同编码的部件已存在"}
2021-02-18 20:32:40,263 workbenchAdd.py[line:44]INFO - 检查返回信息为：{"message":"相同编码的部件已存在"}
2021-02-18 20:32:40,435 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60016, 'message': '部件名称格式不正确'}
2021-02-18 20:32:40,435 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60016, 'message': '部件名称格式不正确'}
2021-02-18 20:32:40,437 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称全局唯一】
2021-02-18 20:32:40,437 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称全局唯一】
2021-02-18 20:32:40,437 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60019}
2021-02-18 20:32:40,437 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60019}
2021-02-18 20:32:40,437 workbenchAdd.py[line:44]INFO - 检查返回信息为：{"message":"相同编码的部件已存在"}
2021-02-18 20:32:40,437 workbenchAdd.py[line:44]INFO - 检查返回信息为：{"message":"相同编码的部件已存在"}
2021-02-18 20:32:40,582 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60016, 'message': '部件名称格式不正确'}
2021-02-18 20:32:40,582 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60016, 'message': '部件名称格式不正确'}
2021-02-18 20:32:40,584 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称边界值，下线】
2021-02-18 20:32:40,584 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称边界值，下线】
2021-02-18 20:32:40,584 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60016}
2021-02-18 20:32:40,584 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60016}
2021-02-18 20:32:40,585 workbenchAdd.py[line:44]INFO - 检查返回信息为：{“message":"部件名称格式不正确"}
2021-02-18 20:32:40,585 workbenchAdd.py[line:44]INFO - 检查返回信息为：{“message":"部件名称格式不正确"}
2021-02-18 20:32:40,731 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60016, 'message': '部件名称格式不正确'}
2021-02-18 20:32:40,731 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60016, 'message': '部件名称格式不正确'}
2021-02-18 20:32:40,733 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称边界值，上线】
2021-02-18 20:32:40,733 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称边界值，上线】
2021-02-18 20:32:40,733 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60016}
2021-02-18 20:32:40,733 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60016}
2021-02-18 20:32:40,733 workbenchAdd.py[line:44]INFO - 检查返回信息为：{“message":"部件名称格式不正确"}
2021-02-18 20:32:40,733 workbenchAdd.py[line:44]INFO - 检查返回信息为：{“message":"部件名称格式不正确"}
2021-02-18 20:32:40,851 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60016, 'message': '部件名称格式不正确'}
2021-02-18 20:32:40,851 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60016, 'message': '部件名称格式不正确'}
2021-02-18 20:32:40,852 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称不合规（非字母开头）】
2021-02-18 20:32:40,852 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称不合规（非字母开头）】
2021-02-18 20:32:40,852 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60016}
2021-02-18 20:32:40,852 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60016}
2021-02-18 20:32:40,852 workbenchAdd.py[line:44]INFO - 检查返回信息为：{“message":"部件名称格式不正确"}
2021-02-18 20:32:40,852 workbenchAdd.py[line:44]INFO - 检查返回信息为：{“message":"部件名称格式不正确"}
2021-02-18 20:32:40,980 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60016, 'message': '部件名称格式不正确'}
2021-02-18 20:32:40,980 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60016, 'message': '部件名称格式不正确'}
2021-02-18 20:32:40,981 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称不合规（非字母开头）】
2021-02-18 20:32:40,981 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称不合规（非字母开头）】
2021-02-18 20:32:40,982 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60016}
2021-02-18 20:32:40,982 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60016}
2021-02-18 20:32:40,982 workbenchAdd.py[line:44]INFO - 检查返回信息为：{“message":"部件名称格式不正确"}
2021-02-18 20:32:40,982 workbenchAdd.py[line:44]INFO - 检查返回信息为：{“message":"部件名称格式不正确"}
2021-02-18 20:32:41,106 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60016, 'message': '部件名称格式不正确'}
2021-02-18 20:32:41,106 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60016, 'message': '部件名称格式不正确'}
2021-02-18 20:32:41,108 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件编码边界值，下线】
2021-02-18 20:32:41,108 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件编码边界值，下线】
2021-02-18 20:32:41,109 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60015}
2021-02-18 20:32:41,109 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60015}
2021-02-18 20:32:41,109 workbenchAdd.py[line:44]INFO - 检查返回信息为：{“message":"部件编码格式不正确"}
2021-02-18 20:32:41,109 workbenchAdd.py[line:44]INFO - 检查返回信息为：{“message":"部件编码格式不正确"}
2021-02-18 20:32:41,254 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60015, 'message': '部件编码格式不正确'}
2021-02-18 20:32:41,254 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60015, 'message': '部件编码格式不正确'}
2021-02-18 20:32:41,256 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称边界值，上线】
2021-02-18 20:32:41,256 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称边界值，上线】
2021-02-18 20:32:41,256 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60015}
2021-02-18 20:32:41,256 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60015}
2021-02-18 20:32:41,256 workbenchAdd.py[line:44]INFO - 检查返回信息为：{“message":"部件编码格式不正确"}
2021-02-18 20:32:41,256 workbenchAdd.py[line:44]INFO - 检查返回信息为：{“message":"部件编码格式不正确"}
2021-02-18 20:32:41,400 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60015, 'message': '部件编码格式不正确'}
2021-02-18 20:32:41,400 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60015, 'message': '部件编码格式不正确'}
2021-02-18 20:32:41,401 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称不合规（非字母开头）】
2021-02-18 20:32:41,401 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称不合规（非字母开头）】
2021-02-18 20:32:41,402 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60015}
2021-02-18 20:32:41,402 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60015}
2021-02-18 20:32:41,402 workbenchAdd.py[line:44]INFO - 检查返回信息为：{“message":"部件编码格式不正确"}
2021-02-18 20:32:41,402 workbenchAdd.py[line:44]INFO - 检查返回信息为：{“message":"部件编码格式不正确"}
2021-02-18 20:32:41,556 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60015, 'message': '部件编码格式不正确'}
2021-02-18 20:32:41,556 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60015, 'message': '部件编码格式不正确'}
2021-02-18 20:32:41,558 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称不合规（非字母开头）】
2021-02-18 20:32:41,558 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-组件名称不合规（非字母开头）】
2021-02-18 20:32:41,558 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60015}
2021-02-18 20:32:41,558 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":60015}
2021-02-18 20:32:41,558 workbenchAdd.py[line:44]INFO - 检查返回信息为：{“message":"部件编码格式不正确"}
2021-02-18 20:32:41,558 workbenchAdd.py[line:44]INFO - 检查返回信息为：{“message":"部件编码格式不正确"}
2021-02-18 20:32:41,710 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60015, 'message': '部件编码格式不正确'}
2021-02-18 20:32:41,710 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60015, 'message': '部件编码格式不正确'}
2021-02-18 20:32:41,712 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-描述200字符边界值校验】
2021-02-18 20:32:41,712 workbenchAdd.py[line:38]INFO - 【开始执行用例:新增组件-描述200字符边界值校验】
2021-02-18 20:32:41,712 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":500}
2021-02-18 20:32:41,712 workbenchAdd.py[line:43]INFO - 检查状态码为：{"code":500}
2021-02-18 20:32:41,713 workbenchAdd.py[line:44]INFO - 检查返回信息为：
2021-02-18 20:32:41,713 workbenchAdd.py[line:44]INFO - 检查返回信息为：
2021-02-18 20:32:41,897 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60015, 'message': '部件编码格式不正确'}
2021-02-18 20:32:41,897 workbenchAdd.py[line:48]INFO - 返回内容为：{'code': 60015, 'message': '部件编码格式不正确'}
