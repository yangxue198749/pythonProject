2021-02-17 21:02:33,371 workbenchAdd.py[line:35]INFO - 【开始执行用例:新增组件-组件名称为空】
2021-02-17 21:02:33,371 workbenchAdd.py[line:40]INFO - 检查状态码为：{"code":60008}
2021-02-17 21:02:33,371 workbenchAdd.py[line:41]INFO - 检查返回信息为：{"message":"部件名称不能为空"}
2021-02-17 21:02:33,386 workbenchAdd.py[line:35]INFO - 【开始执行用例:新增组件-组件编码为空】
2021-02-17 21:02:33,386 workbenchAdd.py[line:40]INFO - 检查状态码为：{"code":60010}
2021-02-17 21:02:33,386 workbenchAdd.py[line:41]INFO - 检查返回信息为：{"message":"部件编码不能为空"}
2021-02-17 21:02:33,388 workbenchAdd.py[line:35]INFO - 【开始执行用例:新增组件-组件内容为空】
2021-02-17 21:02:33,395 workbenchAdd.py[line:40]INFO - 检查状态码为：{"code":60009}
2021-02-17 21:02:33,395 workbenchAdd.py[line:41]INFO - 检查返回信息为：{"message":"内容url不能为空"}
2021-02-17 21:02:33,401 workbenchAdd.py[line:35]INFO - 【开始执行用例:新增组件-组件组件类型为空】
2021-02-17 21:02:33,401 workbenchAdd.py[line:40]INFO - 检查状态码为：{"code":60013}
2021-02-17 21:02:33,401 workbenchAdd.py[line:41]INFO - 检查返回信息为：{"message":"部件规格分类不能为空"}
2021-02-17 21:02:33,403 workbenchAdd.py[line:35]INFO - 【开始执行用例:新增组件-新增成功】
2021-02-17 21:02:33,403 workbenchAdd.py[line:40]INFO - 检查状态码为：{"code":200}
2021-02-17 21:02:33,403 workbenchAdd.py[line:41]INFO - 检查返回信息为：
2021-02-17 21:02:33,417 workbenchAdd.py[line:35]INFO - 【开始执行用例:新增组件-组件名称重复】
2021-02-17 21:02:33,417 workbenchAdd.py[line:40]INFO - 检查状态码为：{"code":60017,}
2021-02-17 21:02:33,417 workbenchAdd.py[line:41]INFO - 检查返回信息为：{"message":"相同名称的部件在当前产品中已存在"}
2021-02-17 21:02:33,420 workbenchAdd.py[line:35]INFO - 【开始执行用例:新增组件-组件名称重复】
2021-02-17 21:02:33,420 workbenchAdd.py[line:40]INFO - 检查状态码为：{"code":60018}
2021-02-17 21:02:33,420 workbenchAdd.py[line:41]INFO - 检查返回信息为：{"message":"相同编码的部件已存在"}
2021-02-17 21:02:33,434 workbenchAdd.py[line:35]INFO - 【开始执行用例:新增组件-组件名称全局唯一】
2021-02-17 21:02:33,435 workbenchAdd.py[line:40]INFO - 检查状态码为：{"code":60019}
2021-02-17 21:02:33,435 workbenchAdd.py[line:41]INFO - 检查返回信息为：{"message":"相同编码的部件已存在"}
2021-02-17 21:02:33,448 workbenchAdd.py[line:35]INFO - 【开始执行用例:新增组件-组件名称边界值，下线】
2021-02-17 21:02:33,448 workbenchAdd.py[line:40]INFO - 检查状态码为：{"code":60016}
2021-02-17 21:02:33,448 workbenchAdd.py[line:41]INFO - 检查返回信息为：{“message":"部件名称格式不正确"}
2021-02-17 21:02:33,451 workbenchAdd.py[line:35]INFO - 【开始执行用例:新增组件-组件名称边界值，上线】
2021-02-17 21:02:33,451 workbenchAdd.py[line:40]INFO - 检查状态码为：{"code":60016}
2021-02-17 21:02:33,451 workbenchAdd.py[line:41]INFO - 检查返回信息为：{“message":"部件名称格式不正确"}
2021-02-17 21:02:33,464 workbenchAdd.py[line:35]INFO - 【开始执行用例:新增组件-组件名称不合规（非字母开头）】
2021-02-17 21:02:33,464 workbenchAdd.py[line:40]INFO - 检查状态码为：{"code":60016}
2021-02-17 21:02:33,464 workbenchAdd.py[line:41]INFO - 检查返回信息为：{“message":"部件名称格式不正确"}
2021-02-17 21:02:33,466 workbenchAdd.py[line:35]INFO - 【开始执行用例:新增组件-组件名称不合规（非字母开头）】
2021-02-17 21:02:33,466 workbenchAdd.py[line:40]INFO - 检查状态码为：{"code":60016}
2021-02-17 21:02:33,466 workbenchAdd.py[line:41]INFO - 检查返回信息为：{“message":"部件名称格式不正确"}
2021-02-17 21:02:33,480 workbenchAdd.py[line:35]INFO - 【开始执行用例:新增组件-组件编码边界值，下线】
2021-02-17 21:02:33,480 workbenchAdd.py[line:40]INFO - 检查状态码为：{"code":60015}
2021-02-17 21:02:33,480 workbenchAdd.py[line:41]INFO - 检查返回信息为：{“message":"部件编码格式不正确"}
2021-02-17 21:02:33,483 workbenchAdd.py[line:35]INFO - 【开始执行用例:新增组件-组件名称边界值，上线】
2021-02-17 21:02:33,483 workbenchAdd.py[line:40]INFO - 检查状态码为：{"code":60015}
2021-02-17 21:02:33,483 workbenchAdd.py[line:41]INFO - 检查返回信息为：{“message":"部件编码格式不正确"}
2021-02-17 21:02:33,497 workbenchAdd.py[line:35]INFO - 【开始执行用例:新增组件-组件名称不合规（非字母开头）】
2021-02-17 21:02:33,497 workbenchAdd.py[line:40]INFO - 检查状态码为：{"code":60015}
2021-02-17 21:02:33,497 workbenchAdd.py[line:41]INFO - 检查返回信息为：{“message":"部件编码格式不正确"}
2021-02-17 21:02:33,510 workbenchAdd.py[line:35]INFO - 【开始执行用例:新增组件-组件名称不合规（非字母开头）】
2021-02-17 21:02:33,510 workbenchAdd.py[line:40]INFO - 检查状态码为：{"code":60015}
2021-02-17 21:02:33,510 workbenchAdd.py[line:41]INFO - 检查返回信息为：{“message":"部件编码格式不正确"}
2021-02-17 21:02:33,514 workbenchAdd.py[line:35]INFO - 【开始执行用例:新增组件-描述200字符边界值校验】
2021-02-17 21:02:33,514 workbenchAdd.py[line:40]INFO - 检查状态码为：{"code":500}
2021-02-17 21:02:33,514 workbenchAdd.py[line:41]INFO - 检查返回信息为：
